<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnPrint.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAANhQTFRF////
        ws3njWyfrLfQu975+u/e3vD/3OX1/++4imWah2SbuLvZi2mdoJy+xtHpwMvm//XhnprCo4irhGCa9+vc
        pIyys83r0dzwoIauimKYpKTDrZi6utv23Oz8lXyqm4iylnih//a6mIqxrKLEnJK34fX/y7Wsspim18Ku
        +ff60en9kXSltrjXhm2gsK7P8uvi+V+C3GOL6mCGtdv5tqPB8OzyxbbN1szc6dvUt6C3w7TM3c3N6OLr
        mmucqrPN7/f90sDG2tHfwKu85NbR/16A5GGIq4+lrr/gEyM4WgAADC1JREFUeF7tnWtD2zgWhoNbmNqo
        DjRlW8oQZiDZXTDN7g6UXreU6e7M//9HK53zWjc7iRJqxc76+VLn2FjnsWRZltN40NPT09PT09PT09PT
        0wIu39++LpKmKI4+fUFBG+Ld7ShLBdJpACGyUfIJhW2Cu1GDdposfY/yovN6hByaZnSLEiMzTpFA82xG
        8ShD8TEYbaCh3pVNVHYGzZGVh3H0DuVG41IX/eLbh5dN8eHzx4w7M3GEgqPxCYbp54PdBjk4ePmaS4pe
        ibhMjD40Kkj8QmVlkTubBz4Ls2/NC+6+pEoUBYqOBBppgSQa5eAjFRa5mR5xy/kYoQp3d79Tg8niXjC4
        CrPPyKFh2DDqifiOT8PRB6TQLAevVYsRr1F4FB64DkWURqpPRBQehU80JBUv4hjufmPDmLeK6Gh+j2T4
        IX5XowqM19HsvqQDKiJ2NehosjgdjTwRaVgjxig+Au+5o0kiNdKyq8lQfARuqcBoHc3uQfSuhq5P8Tqa
        DYxquJFmzd44OVCJabSuphzRvETxzYOuJtrtBTqaKDcWzMFHOi9Gl8igaW758nQSr5HG7mqidzS6q7lD
        Bk0Tv6Mp7/NPkEHDfMGIJl5Ho7uaSKOasqOJWIWRu5pbvnWK2NGYruYBOTRLEb+jidvVYLY7akcTt6sp
        O5rdg+aBnoS7miRBEuvz8OnkaAljLip50TgnVjNBVyOQxHxOPi06V++yUSqWQn6ysOYZmSl1dDUBpabZ
        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
</value>
  </data>
</root>